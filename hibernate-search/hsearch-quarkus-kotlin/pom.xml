<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.hibernate.search.demos</groupId>
  <artifactId>hsearch-quarkus-kotlin</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <kotlin.version>1.3.72</kotlin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus-plugin.version>1.7.1.Final</quarkus-plugin.version>
    <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.platform.version>1.7.1.Final</quarkus.platform.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>

    <org.mapstruct.version>1.4.0.Beta3</org.mapstruct.version>
    <com.github.pozo.mapstruct-kotlin.version>1.4.0.0</com.github.pozo.mapstruct-kotlin.version>

    <test.env.postgresql.version>12.0</test.env.postgresql.version>
    <test.env.postgresql.image>postgres:${test.env.postgresql.version}</test.env.postgresql.image>
    <test.env.elasticsearch.version>7.9.0</test.env.elasticsearch.version>
    <test.env.elasticsearch.image>docker.elastic.co/elasticsearch/elasticsearch:${test.env.elasticsearch.version}</test.env.elasticsearch.image>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>kotlin-extensions</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-search-elasticsearch</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kotlin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache-kotlin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${org.mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.pozo</groupId>
      <artifactId>mapstruct-kotlin</artifactId>
      <version>${com.github.pozo.mapstruct-kotlin.version}</version>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare</goal>
              <goal>prepare-tests</goal>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/main/kotlin</sourceDir>
                <sourceDir>src/main/java</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>com.github.pozo</groupId>
                  <artifactId>mapstruct-kotlin-processor</artifactId>
                  <version>${com.github.pozo.mapstruct-kotlin.version}</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>${org.mapstruct.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <javaParameters>true</javaParameters>
          <jvmTarget>11</jvmTarget>
          <compilerPlugins>
            <plugin>all-open</plugin>>
            <plugin>jpa</plugin>
          </compilerPlugins>
          <pluginOptions>
            <option>all-open:annotation=javax.ws.rs.Path</option>
            <option>all-open:annotation=javax.enterprise.context.ApplicationScoped</option>
            <option>all-open:annotation=io.quarkus.test.junit.QuarkusTest</option>
          </pluginOptions>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>

    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <properties>
        <test.config.postgresql.host>localhost</test.config.postgresql.host>
        <test.config.postgresql.database>quarkus_test</test.config.postgresql.database>
        <test.config.postgresql.username>quarkus_test</test.config.postgresql.username>
        <test.config.postgresql.password>quarkus_test</test.config.postgresql.password>
        <test.config.elasticsearch.hosts>localhost:9200</test.config.elasticsearch.hosts>
        <test.config.elasticsearch.protocol>http</test.config.elasticsearch.protocol>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <environmentVariables>
                <POSTGRESQL_HOST>${test.config.postgresql.host}</POSTGRESQL_HOST>
                <POSTGRESQL_DB>${test.config.postgresql.database}</POSTGRESQL_DB>
                <POSTGRESQL_USERNAME>${test.config.postgresql.username}</POSTGRESQL_USERNAME>
                <POSTGRESQL_PASSWORD>${test.config.postgresql.password}</POSTGRESQL_PASSWORD>
                <ES_HOSTS>${test.config.elasticsearch.hosts}</ES_HOSTS>
                <ES_PROTOCOL>${test.config.elasticsearch.protocol}</ES_PROTOCOL>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <environmentVariables>
                <POSTGRESQL_HOST>${test.config.postgresql.host}</POSTGRESQL_HOST>
                <POSTGRESQL_DB>${test.config.postgresql.database}</POSTGRESQL_DB>
                <POSTGRESQL_USERNAME>${test.config.postgresql.username}</POSTGRESQL_USERNAME>
                <POSTGRESQL_PASSWORD>${test.config.postgresql.password}</POSTGRESQL_PASSWORD>
                <ES_HOSTS>${test.config.elasticsearch.hosts}</ES_HOSTS>
                <ES_PROTOCOL>${test.config.elasticsearch.protocol}</ES_PROTOCOL>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>${test.env.postgresql.image}</name>
                  <alias>postgresql</alias>
                  <run>
                    <env>
                      <POSTGRES_USER>${test.config.datasource.username}</POSTGRES_USER>
                      <POSTGRES_PASSWORD>${test.config.datasource.password}</POSTGRES_PASSWORD>
                      <POSTGRES_DB>${test.config.datasource.jdbc.database}</POSTGRES_DB>
                    </env>
                    <ports>
                      <port>5431:5432</port>
                    </ports>
                    <wait>
                      <tcp>
                        <mode>mapped</mode>
                        <ports>
                          <port>5432</port>
                        </ports>
                      </tcp>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <name>${test.env.elasticsearch.image}</name>
                  <alias>elasticsearch</alias>
                  <run>
                    <env>
                      <discovery.type>single-node</discovery.type>
                    </env>
                    <ports>
                      <port>9200:9200</port>
                    </ports>
                    <log>
                      <prefix>Elasticsearch: </prefix>
                      <date>default</date>
                      <color>cyan</color>
                    </log>
                    <wait>
                      <http>
                        <url>http://localhost:9200</url>
                        <method>GET</method>
                        <status>200</status>
                      </http>
                      <time>20000</time>
                    </wait>
                  </run>
                </image>
              </images>
              <allContainers>true</allContainers>
            </configuration>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>docker-stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
